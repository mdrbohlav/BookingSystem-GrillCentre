extends layout

block content
    section.hero.table.table--fullsize
        .table__cell
            .hero__content
                h1.text__mainTitle.separator__after !{__('pages_index_title')}
                h2.shlogo.text__subtitle.text--white !{__('siliconhill')}
    section.content
        .container__md
            .box
                .box__header.box__header--border
                    h2.text__title !{__('pages_index_calendarTitle')}
                .box__body
                    .row
                        .col-xs-12.col-sm-6.text--yellow !{__('pages_index_legend_1')}
                        .col-xs-12.col-sm-6.text--red !{__('pages_index_legend_2')}
                        .col-xs-12.col-sm-6.text--orange !{__('pages_index_legend_3')}
                    .calendar.margin--top-15
                        script#calendar-template(type="text/template").
                            <div class="calendar__controls text--center">
                                <button class="calendar__prev text__paragraph" type="button">&lsaquo;</button>
                                <div class="calendar__current text__paragraph"><%= this.month.format('MMMM YYYY') %></div>
                                <button class="calendar__next text__paragraph" type="button">&rsaquo;</button>
                            </div>
                            <div class="calendar__grid">
                                <div class="calendar__daysWeek text--center clearfix">
                                    <% _.each(daysOfTheWeek, function(day) { %>
                                        <div class="calendar__cell day__header"><%= day %></div>
                                    <% }); %>
                                </div>
                                <div class="calendar__days clearfix">
                                <% 
                                    var lastDay = new Date();
                                    lastDay.setDate(lastDay.getDate() + #{reservationUpfront});
                                    lastDay.setHours(23, 59, 59, 999);
                                %>
                                <% _.each(days, function(day) { %>
                                    <%
                                        var dayClass = '';
                                        if (#{!user.isAdmin} && new Date(day.date.format()) > lastDay) {
                                            dayClass = 'inactive';
                                        }
                                        for (var i in day.events) {
                                            if (day.events[i].onlyMobileGrill) {
                                                day.events[i].class = 'grill';
                                                day.events[i].title = '!{__('pages_index_legend_1')}';
                                            } else if (!day.events[i].mobileGrill) {
                                                day.events[i].class = 'centre';
                                                day.events[i].title = '!{__('pages_index_legend_2')}';
                                            } else {
                                                day.events[i].class = 'both';
                                                day.events[i].title = '!{__('pages_index_legend_3')}';
                                            }
                                        }
                                    %>
                                    <div class="calendar__cell <%= day.classes %> <%= dayClass %>">
                                        <div class="day__num"><%= day.day %></div>
                                        <% for (var i in day.events) { %>
                                            <div class="day__event <%= day.events[i].class %>" title="<%= day.events[i].title %>">
                                            <% if (day.events[i].name.length > 15) { %>
                                                <%= day.events[i].name.substr(0, 15) %>â€¦
                                            <% } else { %>
                                                <%= day.events[i].name %>
                                            <% } %>
                                            </div>
                                        <% } %>
                                    </div>
                                <% }); %>
                                </div>
                            </div>
                            <button class="calendar__today text__paragraph text--center" type="button">!{__('buttons_currentMonth')}</button>
            .box
                .box__header.box__header--border
                    h2.text__title !{__('pages_index_newReservationTitle')}
                .box__body
                    form#create-reservation.form.form__reservation(method='POST', action='/api/reservation/create')
                        .fieldset.row
                            if reservationLength === 1 && !user.isAdmin
                                .field__container.col-xs-12.col-sm-6.margin--top-20
                                    label.text__label(for='date') !{__('labels_date')}
                                    .field
                                        input#date(type='text', name='date', required)
                            else
                                .field__container.col-xs-12.col-sm-6.margin--top-20
                                    label.text__label(for='date') !{__('labels_from')}
                                    .field
                                        input#date(type='text', name='date', required)
                                .field__container.col-xs-12.col-sm-6.margin--top-20
                                    label.text__label(for='date-to') !{__('labels_to')}
                                    .field
                                        input#date-to(type='text', name='date-to', required)
                            .field__container.col-xs-12.col-sm-6.margin--top-20
                                label.text__label(for='pickup') !{__('labels_pickup')}
                                .field
                                    input#pickup(type='text', name='pickup', required)
                        .switch__container
                            .fieldset
                                .text--center.margin--top-35
                                    ul.switch__list
                                        li: button.switch__trigger.active(type='button', data-res-type='centre') !{__('pages_index_switch_1')}
                                        li: button.switch__trigger(type='button', data-res-type='grill') !{__('pages_index_switch_2')}
                            .switch__content.fieldset.accessories
                                h3.text__subtitle.text--default !{__('pages_index_accessories')}
                                .field__checkbox
                                    span.checkbox
                                        input#mobileGrill(type='checkbox', name='mobileGrill')
                                    label.t__label(for='mobileGrill') !{__('labels_mobileGrill')}
                                each accessory, index in accessories
                                    if accessory.available
                                        .field__checkbox
                                            span.checkbox
                                                input(id='accessory-#{index}', type='checkbox', name='accessory', value= accessory.id)
                                            if Object.keys(user.locale)[0] === 'cs'
                                                label.t__label(for='accessory-#{index}')= accessory.name
                                            else
                                                label.t__label(for='accessory-#{index}')= accessory.nameEn
                        .form__footer.text--center.margin--top-40
                            button.btn.btn__orange(type='submit') !{__('buttons_create')}
    section.modal
        .table.table--fullsize
            button.modal__close.btn__close.icon.icon__cross(type='button')
            .modal__content.table__cell
                .container__md
                    .box.modalReservation__centre
                        h2.text__title.box__header.box__header--border !{__('modal_grillCentreReservationTitle')}
                        .box__body
                            h3.modalReservation__title.text__subtitle.text--default
                            .row
                                .col-xs-12.col-sm-6
                                    .modalReservation__date.text__paragraph.margin--top-10
                                        span.text--strong !{__('labels_date')}
                                        span.value
                                    .modalReservation__pickup.text__paragraph.margin--top-10
                                        span.text--strong !{__('labels_pickup')}
                                        span.value
                                    .modalReservation__mobileGrill.text__paragraph.margin--top-10
                                        span.text--strong !{__('labels_mobileGrill')}
                                        span.value
                                .col-xs-12.col-sm-6.margin--top-10
                                    h4.text__paragraph !{__('modal_accessories')}
                                    ul.modalReservation__accessories.text__paragraph--small
                    .box.modalReservation__grill
                        h2.text__title.box__header.box__header--border !{__('modal_mgReservationTitle')}
                        .box__body
                            h3.modalReservation__title.text__subtitle.text--default
                            .row
                                .col-xs-12.col-sm-6
                                    .modalReservation__date.text__paragraph.margin--top-10
                                        span.text--strong !{__('labels_date')}
                                        span.value
                                    .modalReservation__pickup.text__paragraph.margin--top-10
                                        span.text--strong !{__('labels_pickup')}
                                        span.value

block scripts
    script.
        var reservations = {},
            users = {},
            loadedMonths = {};

        function loadReservations(calendar) {
            var tmp = calendar.month.clone();
            var date = tmp.add(tmp.local().utcOffset(), 'm'),
                startInterval = date.utc().subtract(1, 'M').format(),
                endInterval = date.utc().add(3, 'M').subtract(1, 'd').format(),
                month = date.subtract(1, 'M').month();

            if (!(month in loadedMonths)) {
                var $spinner = $('<div class="spinner--absolute"></div>');
                $spinner.append(getSpinner());
                $('.calendar').prepend($spinner);
            }

            var data = {
                from: encodeURIComponent(startInterval),
                to: encodeURIComponent(endInterval)
            };

            makeRequest('/api/reservation', 'GET', data, function(res) {
                var reservationsObj = res.reservations,
                    usersObj = res.users,
                    reservationsArr = [];
                for (var i in usersObj) {
                    if (i in users) {
                        continue;
                    }
                    users[i] = usersObj[i];
                }
                for (var i = 0; i < reservationsObj.length; i++) {
                    if (reservationsObj[i].id in reservations || ['confirmed', 'finished'].indexOf(reservationsObj[i].state) === -1) {
                        continue;
                    }
                    reservationsObj[i].from = moment(reservationsObj[i].from).add(calendar.month.local().utcOffset(), 'm').format();
                    reservationsObj[i].to = moment(reservationsObj[i].to).subtract(calendar.month.local().utcOffset(), 'm').format();
                    reservationsObj[i].name = users[reservationsObj[i].userId].fullName;
                    reservations[reservationsObj[i].id] = reservationsObj[i];
                    reservationsArr.push(reservationsObj[i]);
                }
                loadedMonths[month] = true;
                loadedMonths[moment(startInterval).month()] = true;
                loadedMonths[moment(endInterval).month()] = true;
                calendar.addEvents(reservationsArr);
            });
        }

        $(document).ready(function() {
            var $date, date, dateTo = null;

            if (#{reservationLength} > 1 || #{user.isAdmin}) {
                var $dateTo = $('#date-to').pickadate({
                    min: true
                });
                dateTo = $dateTo.pickadate('picker');

                if (!#{user.isAdmin}) {
                    dateTo.set('max', #{reservationUpfront});
                }
                
                dateTo.on({
                    set: function(event) {
                        if (event.select) {
                            var dat = new Date(event.select),
                                MS_PER_DAY = 1000 *Â 60 * 60 * 24,
                                today = new Date();
                            today = today.setHours(0, 0, 0, 0);
                            today = new Date(today).getTime();
                            date.set('max', dat);
                            if (!#{user.isAdmin}) {
                                dat = event.select - #{reservationUpfront} * MS_PER_DAY <= today ? true : new Date(event.select);
                                date.set('min', dat);
                            }
                        } else if ('clear' in event) {
                            date.set('min', true);
                            if (!#{user.isAdmin}) {
                                date.set('max', #{reservationUpfront});
                            } else {
                                date.set('max', false);
                            }
                        }
                    }
                });

                $dateTo.on('change', function() {
                    $dateTo.valid();
                });

                $date = $('#date').pickadate({
                    min: true,
                    onSet: function(event) {
                        if (event.select) {
                            var dat = new Date(event.select),
                                MS_PER_DAY = 1000 *Â 60 * 60 * 24,
                                today = new Date();
                            today = today.setHours(0, 0, 0, 0);
                            today = new Date(today).getTime();
                            dateTo.set('min', dat);
                            if (!#{user.isAdmin}) {
                                dat = event.select + (#{reservationLength} - 1) * MS_PER_DAY >= today + #{reservationUpfront} * MS_PER_DAY ? today + #{reservationUpfront} * MS_PER_DAY : event.select + (#{reservationLength} - 1) * MS_PER_DAY;
                                dat = new Date(dat);
                                dateTo.set('max', dat);
                            }
                        } else if ('clear' in event) {
                            dateTo.set('min', true);
                            if (!#{user.isAdmin}) {
                                dateTo.set('max', #{reservationUpfront});
                            }
                        }
                    }
                });
            } else {
                $date = $('#date').pickadate();
            }
            
            date = $date.pickadate('picker');
            if (!#{user.isAdmin}) {
                date.set('max', #{reservationUpfront});
            }

            var $pickup = $('#pickup').pickatime({
                format: 'HH:i',
                interval: #{keyPickupInterval}
            });

            pickup = $pickup.pickatime('picker');
            if (!#{user.isAdmin}) {
                pickup.set({
                    min: [Math.floor(#{keyPickupFrom} / 60), #{keyPickupFrom} % 60],
                    max: [Math.floor(#{keyPickupTo} / 60), #{keyPickupTo} % 60]
                });
                /* / syntax highlight fix */
            }

            $date.on('change', function() {
                $date.valid();
            });

            $pickup.on('change', function() {
                $pickup.valid();
            });

            moment.locale('#{Object.keys(user.locale)[0]}');
            var calendar = $('.calendar').clndr({
                multiDayEvents: {
                    endDate: 'to',
                    startDate: 'from'
                },
                targets: {
                    day: 'day',
                    empty: 'empty',
                    nextButton: 'calendar__next',
                    todayButton: 'calendar__today',
                    previousButton: 'calendar__prev'
                },
                clickEvents: {
                    click: function (target) {
                        var d = new Date(target.date.format()),
                            today = new Date(),
                            lastDay = new Date();
                        
                        today.setHours(0, 0, 0, 0);
                        lastDay.setDate(lastDay.getDate() + #{reservationUpfront});
                        lastDay.setHours(23, 59, 59, 999);

                        if (target.events.length) {
                            var dayEvents = 0;
                            for (var i = 0; i < target.events.length; i++) {
                                var tmp = moment();
                                var start = moment(target.events[i].from).subtract(tmp.local().utcOffset() , 'm').format('LL'),
                                    end = moment(target.events[i].to).subtract(tmp.local().utcOffset() , 'm').format('LL'),
                                    resDate = start;
                                if (start !== end) {
                                    resDate += ' - ' + end;
                                }
                                if (target.events[i].onlyMobileGrill) {
                                    dayEvents += 1;
                                    $('.modalReservation__grill .modalReservation__title').text(users[target.events[i].userId].fullName);
                                    $('.modalReservation__grill .modalReservation__date .value').text(resDate);
                                    $('.modalReservation__grill .modalReservation__pickup .value').text(Math.floor(target.events[i].pickup / 60) + ':' + pad(target.events[i].pickup % 60));
                                } else if (!target.events[i].mobileGrill) {
                                    dayEvents += 2;
                                    $('.modalReservation__centre .modalReservation__title').text(users[target.events[i].userId].fullName);
                                    $('.modalReservation__centre .modalReservation__date .value').text(resDate);
                                    $('.modalReservation__centre .modalReservation__pickup .value').text(Math.floor(target.events[i].pickup / 60) + ':' + pad(target.events[i].pickup % 60));
                                    $('.modalReservation__centre .modalReservation__accessories').html('');
                                    if (target.events[i].accessories.length === 0) {
                                        $('.modalReservation__centre .modalReservation__accessories').append('<li>!{__('modal_nothing')}</li>');
                                    } else {
                                        for (var j = 0; j < target.events[i].accessories.length; j++) {
                                            $('.modalReservation__centre .modalReservation__accessories').append('<li>' + target.events[i].accessories[j].name + '</li>');
                                        }
                                    }
                                } else {
                                    dayEvents = 4;
                                    $('.modalReservation__centre .modalReservation__title').text(users[target.events[i].userId].fullName);
                                    $('.modalReservation__centre .modalReservation__date .value').text(resDate);
                                    $('.modalReservation__centre .modalReservation__pickup .value').text(Math.floor(target.events[i].pickup / 60) + ':' + pad(target.events[i].pickup % 60));
                                    $('.modalReservation__centre .modalReservation__accessories').html('');
                                    if (target.events[i].accessories.length === 0) {
                                        $('.modalReservation__centre .modalReservation__accessories').append('<li>!{__('modal_nothing')}</li>');
                                    } else {
                                        for (var j = 0; j < target.events[i].accessories.length; j++) {
                                            $('.modalReservation__centre .modalReservation__accessories').append('<li>' + target.events[i].accessories[j].name + '</li>');
                                        }
                                    }
                                    $('.modalReservation__centre .modalReservation__mobileGrill .value').text((target.events[i].mobileGrill ? '!{__('labels_yes')}' : '!{__('labels_no')}'));
                                }
                            }

                            if (dayEvents < 3) {
                                date.set('select', new Date(target.date.format()));
                            }

                            if (dayEvents === 1) {
                                $('.modalReservation__centre').hide();
                                $('.modalReservation__grill').show();
                            } else if (dayEvents === 2) {
                                $('.modalReservation__centre').show();
                                $('.modalReservation__grill, .modalReservation__mobileGrill').hide();
                            } else if (dayEvents === 3) {
                                $('.modalReservation__centre, .modalReservation__grill').show();
                                $('.modalReservation__mobileGrill').hide();
                            } else {
                                $('.modalReservation__centre, .modalReservation__mobileGrill').show();
                                $('.modalReservation__grill').hide();
                            }

                            showModal();
                        } else if (d >= today &&Â (#{user.isAdmin} || d <= lastDay)) {
                            date.set('select', new Date(target.date.format()));
                        }
                    },
                    onMonthChange: function() {
                        loadReservations(this);
                    }
                },
                doneRendering: function() {
                    if ($('.calendar .spinner--absolute').length) {
                        $('.calendar .spinner--absolute').remove();
                    }
                },
                template: $('#calendar-template').html(),
                showAdjacentMonths: true,
                adjacentDaysChangeMonth: true
            });

            loadReservations(calendar);

            $('[data-res-type="centre"]').on('click', function() {
                var $this = $(this);
                if ($this.hasClass('active')) {
                    return;
                }
                $('[data-res-type="grill"]').removeClass('active');
                $this.addClass('active');
                $('.accessories').velocity('finish').velocity('slideDown');
            });

            $('[data-res-type="grill"]').on('click', function() {
                var $this = $(this);
                if ($this.hasClass('active')) {
                    return;
                }
                $('[data-res-type="centre"]').removeClass('active');
                $this.addClass('active');
                $('.accessories').velocity('finish').velocity('slideUp');
            });

            $('#create-reservation').validate({
                rules: {
                    date: {
                        required: true
                    },
                    'date-to': {
                        required: function() {
                            return $('#date-to').length > 0 ? true: false;
                        }
                    },
                    pickup: {
                        required: true
                    }
                },
                errorPlacement: function() {
                    return false;
                },
                highlight: function(element, errorClass, validClass) {
                    $(element).parent().addClass('error');
                },
                unhighlight: function(element, errorClass, validClass) {
                    $(element).parent().removeClass('error');
                },
                submitHandler: function(form) {
                    var data = {};
                    var start = $('[name="date"]').pickadate('picker').get('select').pick,
                        end;
                    start = moment(new Date(start)).add(moment().utcOffset(), 'm').utc().format().replace(/\+00:00/, 'Z');
                    end = start;

                    if (#{reservationLength} > 1) {
                        end = $('[name="date-to"]').pickadate('picker').get('select').pick;
                        end = moment(new Date(end)).add(moment().utcOffset(), 'm').utc().format().replace(/\+00:00/, 'Z');
                    }
                    data.from = start;
                    data.to = end;
                    data.pickup = $('#pickup').pickatime('picker').get('select').pick;
                    data.mobileGrill = $('#mobileGrill').prop('checked');

                    if ($('[data-res-type="grill"]').hasClass('active')) {
                        data.onlyMobileGrill = true;
                        data.mobileGrill = true;
                    } else {
                        data.accessories = [];
                        $('[name="accessory"]:checked').each(function(i, element) {
                            data.accessories.push($(element).val());
                        });
                    }
                    
                    var url = $(form).attr('action'),
                        method = $(form).attr('method');
                    makeRequest(url, method, data, function(res) {
                        date.clear();
                        $date.parent().removeClass('error');
                        pickup.clear();
                        $pickup.parent().removeClass('error');
                        if (dateTo) {
                            dateTo.clear();
                            $dateTo.parent().removeClass('error');
                        }
                        if ($('#mobileGrill').prop('checked')) {
                            $('#mobileGrill').trigger('click');
                        }
                        $('.accessories input[type="checkbox"]').each(function(i, element) {
                            if ($(element).prop('checked')) {
                                $(element).trigger('click');
                            }
                        });
                        addNotification('success', 'Pre-reservation successfully created.');
                    }, function(res) {
                        console.log(res);
                        if (res instanceof Array) {
                            for (var i = 0; i < res.length; i++) {
                                addNotification('error', res[i].message);
                            }
                        } else {
                            var msg = res.responseJSON.error.message;
                            if (res.responseJSON.error.type === 'MaxReservationLength') {
                                msg += ' (maximum is #{reservationLength} ';
                                msg += #{reservationLength} > 1 ? 'days)' : 'day)';
                            } else if (res.responseJSON.error.type === 'MaxReservationUpfront') {
                                msg += ' (maximum is #{reservationUpfront} ';
                                msg += #{reservationUpfront} > 1 ? 'days)' : 'day)';
                            }
                            addNotification('error', msg);
                        }
                    });
                }
            });
        });
