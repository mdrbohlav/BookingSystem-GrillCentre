extends layout

block content
    section.content
        - function capitalizeFirstLetter(string) {
        -     return string.charAt(0).toUpperCase() + string.slice(1);
        - }
        - function pad(n) { 
        -     return n < 10 ? '0' + n : n; 
        - }
        .container__md
            .box
                - var draftCnt = 0
                - var today = new Date()
                - today.setUTCHours(0, 0, 0, 0)
                .box__header.box__header--border
                    h2.text__title !{__('pages_reservations_titles_1')}
                .box__body
                    .table__wrapper
                        ul#listWaitingReservations.listReservations.table.table__styled.table--fullsize.table--responsive.text--center
                            each reservation in data.reservations
                                if reservation.state === 'draft' && new Date(reservation.from) >= today
                                    - var resUser = data.users[reservation.userId]
                                    if draftCnt === 0
                                        li.table__row.table__heading
                                            .table__cell !{__('labels_name')}
                                            .table__cell(title="#{__('labels_priority')}") !{__('labels_priority_shortcut')}
                                            .table__cell(title="#{__('labels_grillCentre')}") !{__('labels_grillCentreShortcut')}
                                            .table__cell(title="#{__('labels_mobileGrill')}") !{__('labels_mobileGrillShortcut')}
                                            .table__cell !{__('labels_from')}
                                            .table__cell !{__('labels_to')}
                                            .table__cell !{__('labels_pickup')}
                                            .table__cell !{__('labels_action')}
                                    li.reservation.table__row(data-id= reservation.id)
                                        .table__cell= resUser.fullName
                                        .table__cell= resUser.priority
                                        .table__cell: span.icon(class= (!reservation.onlyMobileGrill ? 'icon__check' : 'icon__cross'))
                                        .table__cell: span.icon(class= (reservation.mobileGrill ? 'icon__check' : 'icon__cross'))
                                        .table__cell(data-date='#{reservation.from}')
                                        .table__cell(data-date='#{reservation.to}')
                                        .table__cell #{Math.floor(reservation.pickup / 60)}:#{pad(reservation.pickup%60)}
                                        .reservation__action.table__cell
                                            button.btn__confirm.icon.icon__check(type='button', data-id= reservation.id, title="#{__('buttons_cofirm')}")
                                            button.btn__reject.icon.icon__cross(type='button', data-id= reservation.id, title="#{__('buttons_reject')}")
                                    - draftCnt++
                            if draftCnt === 0
                                li.table__row.table__noborder
                                    .table__cell
                                        p.text__paragraph.text--center !{__('pages_reservations_nothing_1')}
            .box
                - var finishedCnt = 0
                .box__header.box__header--border
                    h2.text__title !{__('pages_reservations_titles_2')}
                .box__body
                    .table__wrapper
                        ul#listWaitingRating.listReservations.table.table__styled.table--fullsize.table--responsive.text--center
                            each reservation in data.reservations
                                if reservation.state === 'finished' && !reservation.rating
                                    - var resUser = data.users[reservation.userId]
                                    if finishedCnt === 0
                                        li.table__row.table__heading
                                            .table__cell !{__('labels_name')}
                                            .table__cell(title="#{__('labels_grillCentre')}") !{__('labels_grillCentreShortcut')}
                                            .table__cell(title="#{__('labels_mobileGrill')}") !{__('labels_mobileGrillShortcut')}
                                            .table__cell !{__('labels_from')}
                                            .table__cell !{__('labels_to')}
                                    li.reservation.table__row(data-id= reservation.id)
                                        .table__cell= resUser.fullName
                                        .table__cell: span.icon(class= (!reservation.onlyMobileGrill ? 'icon__check' : 'icon__cross'))
                                        .table__cell: span.icon(class= (reservation.mobileGrill ? 'icon__check' : 'icon__cross'))
                                        .table__cell(data-date='#{reservation.from}')
                                        .table__cell(data-date='#{reservation.to}')
                                    - finishedCnt++
                            if finishedCnt === 0
                                li.table__row.table__noborder
                                    .table__cell
                                        p.text__paragraph.text--center !{__('pages_reservations_nothing_2')}
            .box
                - var resCnt = 0
                - var date = new Date()
                - var y = date.getFullYear()
                - var m = date.getMonth()
                - var lastDay = new Date(y, m + 1, 0)
                - var firstDay = new Date(y, m, 1)
                - firstDay.setUTCHours(0, 0, 0, 0)
                - lastDay.setUTCHours(23, 59, 59, 999)
                - var today = new Date()
                - today.setUTCHours(0, 0, 0, 0)
                .box__header.box__header--border
                    h2.text__title !{__('pages_reservations_titles_3')} (
                        span.month__selected
                        | )
                .box__body
                    .table__wrapper
                        ul#listAllReservations.listReservations.table.table__styled.table--fullsize.table--responsive.text--center
                            each reservation in data.reservations
                                if new Date(reservation.to) >= firstDay && new Date(reservation.from) <= lastDay
                                    - var resUser = data.users[reservation.userId]
                                    if resCnt === 0
                                        li.table__row.table__heading
                                            .table__cell !{__('labels_name')}
                                            .table__cell(title="#{__('labels_grillCentre')}") !{__('labels_grillCentreShortcut')}
                                            .table__cell(title="#{__('labels_mobileGrill')}") !{__('labels_mobileGrillShortcut')}
                                            .table__cell !{__('labels_to')}
                                            .table__cell !{__('labels_from')}
                                            .table__cell !{__('labels_state')}
                                            .table__cell !{__('labels_other')}
                                    li.reservation.table__row(data-id= reservation.id)
                                        .table__cell= resUser.fullName
                                        .table__cell: span.icon(class=(!reservation.onlyMobileGrill ? 'icon__check' : 'icon__cross'))
                                        .table__cell: span.icon(class=(reservation.mobileGrill ? 'icon__check' : 'icon__cross'))
                                        .reservation__state.table__cell: span.icon(class=(reservation.state === 'draft' ? 'icon__pencil' : reservation.state === 'confirmed' ? 'icon__check' : reservation.state === 'finished' ? 'icon__flag' : 'icon__cross'), title= capitalizeFirstLetter(reservation.state))
                                        .table__cell(data-date='#{reservation.from}')
                                        .table__cell(data-date='#{reservation.to}')
                                        if reservation.rating
                                            .reservation__rating.table__cell
                                                span.icon.icon__star.text--yellow 
                                                | #{reservation.rating.value / 10}
                                        else if reservation.state === 'finished'
                                            .reservation__rating.table__cell !{__('labels_notrated')}
                                        else if [ 'draft', 'confirmed' ].indexOf(reservation.state) > -1 && reservation.from >= today
                                            .reservation__action.table__cell
                                                button.btn__cancel.icon.icon__cross(type='button', data-id= reservation.id, title="#{__('buttons_cancel')}")
                                        else 
                                            .table__cell
                                    - resCnt++
                            if resCnt === 0
                                li.table__row.table__noborder
                                    .table__cell
                                        p.text__paragraph.text--center !{__('pages_reservations_nothing_3')}
                    .text--center.margin--top-35
                        ol.pagination
                            li: button.pagination__prev(type='button')
                                span.icon.icon__arrow-left
                                | &nbsp;
                                span.month__prev
                            li: button.pagination__item(type='button')
                                span.month__current !{__('buttons_currentMonth')}
                            li: button.pagination__next(type='button')
                                span.month__next
                                | &nbsp;
                                span.icon.icon__arrow-right
    section.modal
        .table.table--fullsize
            button.modal__close.btn__close.icon.icon__cross(type='button')
            .modal__content.table__cell
                .container__md
                    .box.modalReservation
                        h2.text__title.box__header.box__header--border !{__('modal_reservationTitle')}
                        .box__body
                            .row
                                .col-xs-12.col-sm-6
                                    .modalReservation__date.text__paragraph.margin--top-10
                                        span.text--strong !{__('labels_date')}
                                        span.value
                                    .modalReservation__pickup.text__paragraph.margin--top-10
                                        span.text--strong !{__('labels_pickup')}
                                        span.value
                                    .modalReservation__centre.text__paragraph.margin--top-10
                                        span.text--strong !{__('labels_grillCentre')}
                                        span.value
                                    .modalReservation__mobileGrill.text__paragraph.margin--top-10
                                        span.text--strong !{__('labels_mobileGrill')}
                                        span.value
                                .col-xs-12.col-sm-6.margin--top-10
                                    h3.text__paragraph !{__('modal_accessories')}
                                    ul.modalReservation__accessories.text__paragraph--small
                            .modalReservation__rate.margin--top-35
                                form#rate(action='/api/admin/reservation/:id/rating', method='POST')
                                    h3.text__paragraph !{__('labels_rating')}
                                    .fieldset.row
                                        .field__container.col-xs-12.col-sm-3.margin--top-10
                                            label.text__label !{__('labels_value')}
                                            .field.rating__field
                                                .ratingWrapper
                                                    input#rating-input-1-5.input--default.rating__input(type="radio", name="rating-input-1", checked)
                                                    label.rating__star(for="rating-input-1-5")
                                                    input#rating-input-1-4.input--default.rating__input(type="radio", name="rating-input-1")
                                                    label.rating__star(for="rating-input-1-4")
                                                    input#rating-input-1-3.input--default.rating__input(type="radio", name="rating-input-1")
                                                    label.rating__star(for="rating-input-1-3")
                                                    input#rating-input-1-2.input--default.rating__input(type="radio", name="rating-input-1")
                                                    label.rating__star(for="rating-input-1-2")
                                                    input#rating-input-1-1.input--default.rating__input(type="radio", name="rating-input-1")
                                                    label.rating__star(for="rating-input-1-1")
                                        .field__container.col-xs-12.col-sm-9.margin--top-10
                                            label.text__label(for='rateComment') !{__('labels_comment')}
                                            .field
                                                input#rateComment(type='text', name='rateComment')
                                    .form__footer.text--center.margin--top-25
                                        button.btn.btn__orange(type='submit') !{__('buttons_rate')}
                    .box.modalUser
                        h2.text__title.box__header.box__header--border !{__('modal_user')}
                        .box__body
                            h3.modalUser__title.text__subtitle.text--default
                            .row
                                .col-xs-12.col-sm-6
                                    .modalUser__admin.text__paragraph.margin--top-10
                                        span.text--strong !{__('labels_admin')}
                                        span.value
                                    .modalUser__email.text__paragraph.margin--top-10
                                        span.text--strong !{__('labels_email')}
                                        span.value
                                    .modalUser__cell.text__paragraph.margin--top-10
                                        span.text--strong !{__('labels_blockRoom')}
                                        span.value
                                .col-xs-12.col-sm-6
                                    .modalUser__ban.text__paragraph.margin--top-10
                                        span.text--strong !{__('labels_ban')}
                                        span.value
                                        button.ban.btn.btn__orange.btn--small(data-type='button') !{__('buttons_grant')}
                                        button.unban.btn.btn__orange.btn--small(data-type='button') !{__('buttons_take')}
                                    .modalUser__isid.text__paragraph.margin--top-10
                                        span.text--strong !{__('labels_isId')}
                                        span.value
                                    .modalUser__locale.text__paragraph.margin--top-10
                                        span.text--strong !{__('labels_language')}
                                        span.value
                            .modalUser__rating
                                h4.text__subtitle.margin--top-35 !{__('modal_allRatings')} (
                                    span.modalUser__ratingTotal
                                    | )
                                ul#listRating.table.table__styled.table--fullsize.text--center
                                    li.table__row.table__noborder
                                        .table__cell
                                            p.text__paragraph.text--center !{__('pages_reservations_nothing_3')}

block scripts
    script.
        var reservations = !{JSON.stringify(data.reservations)},
            users = !{JSON.stringify(data.users)},
            tmp = {};
        for (var i = 0; i < reservations.length; i++) {
            tmp[reservations[i].id] = reservations[i];
        }
        reservations = tmp;
    
        function getReservationsTableHeading() {
            return $('<li class="table__row table__heading">')
                .append('<div class="table__cell">!{__('labels_name')}')
                .append('<div class="table__cell" title="!{__('labels_grillCentre')}">!{__('labels_grillCentreShortcut')}')
                .append('<div class="table__cell" title="!{__('labels_mobileGrill')}">!{__('labels_mobileGrillShortcut')}')
                .append('<div class="table__cell">!{__('labels_state')}')
                .append('<div class="table__cell">!{__('labels_from')}')
                .append('<div class="table__cell">!{__('labels_to')}')
                .append('<div class="table__cell">!{__('labels_other')}');
        }

        function getReservationRow(reservation, user) {
            var tmp = moment(),
                start = moment(reservation.from).subtract(tmp.local().utcOffset(), 'm'),
                end = moment(reservation.to).subtract(tmp.local().utcOffset(), 'm'),
                today = new Date(),
                $row = $('<li class="reservation table__row" data-id="' + reservation.id + '">')
                .append('<div class="table__cell">' + user.fullName)
                .append('<div class="table__cell"><span class="icon icon__' + (!reservation.onlyMobileGrill ? 'check' : 'cross') + '">')
                .append('<div class="table__cell"><span class="icon icon__' + (reservation.mobileGrill ? 'check' : 'cross') + '">')
                .append('<div class="reservation__state table__cell"><span class="icon icon__' + (reservation.state === 'draft' ? 'pencil' : reservation.state === 'confirmed' ? 'check' : reservation.state === 'finished' ? 'flag' : 'cross') + '" title="' + capitalizeFirstLetter(reservation.state) + '">')
                .append('<div class="table__cell" data-date="' + reservation.from + '">' + start.format('LL'))
                .append('<div class="table__cell" data-date="' + reservation.to + '">' + end.format('LL'));
            today.setUTCHours(0, 0, 0, 0);
            if (reservation.rating) {
                $row.append('<div class="reservation__rating table__cell"><span class="icon icon__star text--yellow"></span> ' + (reservation.rating.value / 10));
            } else if (reservation.state === 'finished') {
                $row.append('<div class="reservation__rating table__cell">!{__('labels_notrated')}');
            } else if ([ 'draft', 'confirmed' ].indexOf(reservation.state) > -1 && new Date(reservation.from) >= today) {
                var $cancelBtn = $('<div class="reservation__action table__cell"><button class="btn__cancel icon icon__cross" type="button" data-id="' + reservation.id + '" title="!{__('buttons_cancel')}">');
                cancelBtnFunctionality($cancelBtn);
                $row.append($cancelBtn);
            } else {
                $row.append('<div class="table__cell">');
            }
            reservationDetailFunctionality($row);
            return $row;
        }

        function getReservationsEmptyRow() {
            return $('<li class="table__row table__noborder">')
                .append($('<div class="table__cell">')
                    .append('<p class="text__paragraph text--center">!{__('pages_reservations_nothing_3')}'));
        }

        function getRatingTableHeading() {
            return $('<li class="table__row table__heading">')
                .append('<div class="table__cell">!{__('labels_added')}')
                .append('<div class="table__cell">!{__('labels_rating')}')
                .append('<div class="table__cell">!{__('labels_comment')}');
        }

        function getRatingRow(rating) {
            var tmp = moment(),
                set = moment(rating.updatedAt).subtract(tmp.local().utcOffset(), 'm');
            return $('<li class="rating table__row" data-id="' + rating.id + '">')
                .append('<div class="table__cell" data-date="' + rating.updatedAt + '">' + set.format('LL'))
                .append('<div class="rating__value table__cell"><span class="icon icon__star text--yellow"></span> ' + (rating.value / 10))
                .append('<div class="rating__comment table__cell">' + (rating.comment ? rating.comment : ''));
        }

        function getRatingEmptyRow() {
            return $('<li class="table__row table__noborder">')
                .append($('<div class="table__cell">')
                    .append('<p class="text__paragraph text--center">!{__('pages_reservations_nothing_4')}'));
        }

        function cancelBtnFunctionality($btn) {
            $btn.on('click', function() {
                var $this = $(this),
                    $row = $this.closest('.table__row'),
                    id = $this.attr('data-id');

                makeRequest('/api/admin/reservation/' + id + '/cancel', 'PUT', {}, function(res) {
                    addNotification('success', 'Reservation successfully canceled.');
                    $this.remove();
                    $row.find('.reservation__state span').removeClass('icon__flag').removeClass('icon__check').addClass('icon__cross').attr('title', 'Canceled');
                });
            });
        }

        function reservationDetailFunctionality($btn) {
            $btn.on('click', function() {
                var $row = $(this),
                    id = $row.attr('data-id'),
                    ignore = $row.find('button').toArray();
                if (ignore.indexOf(event.target) > -1) {
                    return;
                }
                setModalReservation(id);
                setModalUser(reservations[id].userId);

                showModal();
            });
        }

        function setModalReservation(id) {
            var tmp = moment();
            var reservation = reservations[id],
                start = moment(reservation.from).subtract(tmp.local().utcOffset() , 'm').format('LL'),
                end = moment(reservation.to).subtract(tmp.local().utcOffset() , 'm').format('LL'),
                resDate = start;
            if (start !== end) {
                resDate += ' - ' + end;
            }
                
            $('.modalReservation').attr('data-id', id);
            $('.modalReservation__date .value').text(resDate);
            $('.modalReservation__pickup .value').text(Math.floor(reservation.pickup / 60) + ':' + pad(reservation.pickup % 60));
            $('.modalReservation__centre .value').text((reservation.onlyMobileGrill ? '!{__('labels_no')}' : '!{__('labels_yes')}'));
            $('.modalReservation__mobileGrill .value').text((reservation.mobileGrill ? '!{__('labels_yes')}' : '!{__('labels_no')}'));
            $('.modalReservation__accessories').html('');
            if (reservation.accessories.length === 0) {
                $('.modalReservation__accessories').append('<li>!{__('modal_nothing')}</li>');
            } else {
                var locale = Object.keys(user.locale)[0];
                for (var j = 0; j < reservation.accessories.length; j++) {
                    if ('#{Object.keys(user.locale)[0]}' === locale) {
                        $('.modalReservation__accessories').append('<li>' + reservation.accessories[j].name + '</li>');
                    } else {
                        $('.modalReservation__accessories').append('<li>' + reservation.accessories[j].nameEn + '</li>');
                    }
                }
            }

            if (reservation.state !== 'finished') {
                $('.modalReservation__rate').hide();
            } else {
                $('.modalReservation__rate').show();
                if (reservation.rating) {
                    var num = reservation.rating.value / 10;
                    $('#rating-input-1-' + num).prop('checked', true);
                    $('#rateComment').val(reservation.rating.comment);
                } else {
                    $('#rating-input-1-5').prop('checked', true);
                    $('#rateComment').val('');
                }
            }
        }

        function setModalUser(id) {
            var user = users[id],
                today = new Date();
                today.setUTCHours(0, 0, 0, 0);

            $('.modalUser').attr('data-id', id);
            $('.modalUser__title').text(user.fullName);
            $('.modalUser__admin .value').text((user.isAdmin ? '!{__('labels_yes')}' : '!{__('labels_no')}'));
            $('.modalUser__email .value').html('<a href="mailto:' + user.email + '">' + user.email + '</a>');
            if (user.block && user.room) {
                $('.modalUser__cell').show();
                $('.modalUser__cell .value').text(user.block + '/' + user.room);
            } else {
                $('.modalUser__cell').hide();
            }
            $('.modalUser__ban .value').text((user.banned ? '!{__('labels_yes')}' : '!{__('labels_no')}'));
            if (user.banned) {
                $('.modalUser__ban .ban').hide();
                $('.modalUser__ban .unban').show();
            } else {
                $('.modalUser__ban .ban').show();
                $('.modalUser__ban .unban').hide();
            }
            if (user.isId) {
                $('.modalUser__isid').show();
                $('.modalUser__isid .value').html('<a href="https://is.sh.cvut.cz/users/' + user.isId + '" target="_blank">' + user.isId + '</a>');
            } else {
                $('.modalUser__isid').hide();
            }
            var locale = Object.keys(user.locale)[0];
            if ('#{Object.keys(user.locale)[0]}' === locale) {
                $('.modalUser__locale .value').text(user.locale[locale].nativeName);
            } else {
                $('.modalUser__locale .value').text(user.locale[locale].name);
            }

            var $list = $('#listRating');

            if (user.ratings.length) {
                var totalRating = 0;
                $list.html(getRatingTableHeading());
                for (var i = 0; i <  user.ratings.length; i++) {
                    totalRating += user.ratings[i].value;
                    $list.append(getRatingRow(user.ratings[i]));
                }
                if (totalRating > 0) {
                    totalRating = Math.round(totalRating / user.ratings.length) / 10;
                }
                $('.modalUser__ratingTotal').text(totalRating);
            } else {
                $list.html(getRatingEmptyRow());
            }
        }

        $(document).ready(function() {
            moment.locale('#{Object.keys(user.locale)[0]}');

            $('[data-date]').each(function(i, element) {
                var tmp = moment(),
                    date = moment($(element).attr('data-date')).subtract(tmp.local().utcOffset(), 'm');
                $(element).text(date.format('LL'));
            });

            var month = moment();
            $('.month__current').attr('data-month', month.valueOf());
            $('.month__selected').text(month.format('MMMM')).attr('data-month', month.valueOf());
            $('.month__prev').text(month.subtract(1, 'months').format('MMMM')).attr('data-month', month.valueOf());
            $('.month__next').text(month.add(2, 'months').format('MMMM')).attr('data-month', month.valueOf());

            $('.pagination button').on('click', function() {
                var $this = $(this),
                    $children = $this.find('[class^="month__"]'),
                    val = $children.attr('data-month'),
                    $list = $('#listAllReservations'),
                    $spinner = $('<div class="spinner--absolute"></div>').append(getSpinner());

                $list.append($spinner);

                makeRequest('/admin/reservations?accept=json&month=' + val, 'GET', {}, function(res) {
                    var month = moment(parseInt(val));
                    $('.month__selected').text(month.format('MMMM')).attr('data-month', month.valueOf());
                    $('.month__prev').text(month.subtract(1, 'months').format('MMMM')).attr('data-month', month.valueOf());
                    $('.month__next').text(month.add(2, 'months').format('MMMM')).attr('data-month', month.valueOf());

                    if (res.total > 0) {
                        $list.html(getReservationsTableHeading());
                        for (var i = 0; i <  res.reservations.length; i++) {
                            $list.append(getReservationRow(res.reservations[i], res.users[res.reservations[i].userId]));
                            if (!(res.reservations[i].id in reservations)) {
                                reservations[res.reservations[i].id] = res.reservations[i];
                            }
                        }
                        for (var k in res.users) {
                            if (k in users) {
                                continue;
                            }
                            users[k] = res.users[k];
                        }
                    } else {
                        $list.html(getReservationsEmptyRow());
                    }
                });
            });

            $('.btn__confirm').on('click', function() {
                var $this = $(this),
                    $row = $this.closest('.table__row'),
                    id = $this.attr('data-id');

                makeRequest('/api/admin/reservation/' + id + '/confirm', 'PUT', {}, function(res) {
                    addNotification('success', 'Reservation successfully confirmed.');
                    $row.remove();
                    if ($('#listWaitingReservations li:not(.table__heading)').length === 0) {
                        $('#listWaitingReservations').html('<li class="table__row table__noborder"><div class="table__cell"><p class="text__paragraph text--center">!{__('pages_reservations_nothing_1')}</p></div></li>');
                    }

                    var $reservationRow = $('.reservation[data-id="' + id + '"]');
                    if ($reservationRow.length) {
                        $reservationRow.find('.reservation__state span').removeClass('icon__pencil').addClass('icon__check').attr('title', 'Confirmed');
                    }
                }, function(res) {
                    console.log(res);
                    if (res instanceof Array) {
                        for (var i = 0; i < res.length; i++) {
                            addNotification('error', res[i].message);
                        }
                    } else {
                        var msg = res.responseJSON.error.message;
                        addNotification('error', msg);
                    }
                });
            });

            $('.btn__reject').on('click', function() {
                var $this = $(this),
                    $row = $this.closest('.table__row'),
                    id = $this.attr('data-id');

                makeRequest('/api/admin/reservation/' + id + '/reject', 'PUT', {}, function(res) {
                    addNotification('success', 'Reservation successfully rejected.');
                    $row.remove();
                    if ($('#listWaitingReservations li:not(.table__heading)').length === 0) {
                        $('#listWaitingReservations').html('<li class="table__row table__noborder"><div class="table__cell"><p class="text__paragraph text--center">!{__('pages_reservations_nothing_1')}</p></div></li>');
                    }

                    var $reservationRow = $('.reservation[data-id="' + id + '"]');
                    if ($reservationRow.length) {
                        $reservationRow.find('.reservation__state span').removeClass('icon__pencil').addClass('icon__cross').attr('title', 'Rejected');
                    }
                }, function(res) {
                    console.log(res);
                    if (res instanceof Array) {
                        for (var i = 0; i < res.length; i++) {
                            addNotification('error', res[i].message);
                        }
                    } else {
                        var msg = res.responseJSON.error.message;
                        addNotification('error', msg);
                    }
                });
            });

            $('.btn__cancel').each(function(i, element) {
                cancelBtnFunctionality($(element));
            });

            $('.modalUser__ban .ban').on('click', function() {
                var $this = $(this),
                    $user = $this.closest('.modalUser'),
                    id = $user.attr('data-id'),
                    $state = $user.find('.modalUser__ban .value'),
                    $unban = $this.next(),
                    data = {
                        banned: true
                    };

                makeRequest('/api/admin/user/' + id, 'PUT', data, function(res) {
                    addNotification('success', 'User ‘' + users[id].fullName + '’ successfully banned.');
                    $this.hide();
                    $unban.show();
                    $state.text('!{__('labels_yes')}');
                }, function(res) {
                    console.log(res);
                    if (res instanceof Array) {
                        for (var i = 0; i < res.length; i++) {
                            addNotification('error', res[i].message);
                        }
                    } else {
                        var msg = res.responseJSON.error.message;
                        addNotification('error', msg);
                    }
                });
            });

            $('.modalUser__ban .unban').on('click', function() {
                var $this = $(this),
                    $user = $this.closest('.modalUser'),
                    id = $user.attr('data-id'),
                    $state = $user.find('.modalUser__ban .value'),
                    $ban = $this.prev(),
                    data = {
                        banned: false
                    };

                makeRequest('/api/admin/user/' + id, 'PUT', data, function(res) {
                    addNotification('success', 'User ‘' + users[id].fullName + '’ successfully unbanned.');
                    $this.hide();
                    $ban.show();
                    $state.text('!{__('labels_no')}');
                }, function(res) {
                    console.log(res);
                    if (res instanceof Array) {
                        for (var i = 0; i < res.length; i++) {
                            addNotification('error', res[i].message);
                        }
                    } else {
                        var msg = res.responseJSON.error.message;
                        addNotification('error', msg);
                    }
                });
            });

            $('.reservation[data-id]').each(function(i, element) {
                reservationDetailFunctionality($(element));
            });

            $('#rate').validate({
                submitHandler: function(form) {
                    var data = {
                        value: 0
                    };
                    for (var i = 5; i > 0; i--) {
                        if ($('#rating-input-1-' + i).prop('checked')) {
                            data.value = i * 10;
                            break;
                        }
                    }
                    if ($('#rateComment').val() !== '') {
                        data.comment = $('#rateComment').val();
                    }
                    
                    var url = $(form).attr('action').replace(/:id/, $('.modalReservation').attr('data-id')),
                        method = $(form).attr('method');
                    makeRequest(url, method, data, function(res) {
                        addNotification('success', 'Successfully rated.');
                        var reservationId = $('.modalReservation').attr('data-id'),
                            id;
                        if (reservations[reservationId].rating) {
                            reservations[reservationId].rating.value = data.value;
                            reservations[reservationId].rating.comment = data.comment;
                            id = reservations[reservationId].rating.id;
                            for (var i = 0; i < users[reservations[reservationId].userId].ratings.length; i++) {
                                if (users[reservations[reservationId].userId].ratings[i].id !== id) {
                                    continue;
                                }
                                users[reservations[reservationId].userId].ratings[i].value = data.value;
                                users[reservations[reservationId].userId].ratings[i].comment = data.comment;
                            }
                        } else {
                            reservations[reservationId].rating = res;
                            id = res.id;
                            users[reservations[reservationId].userId].ratings.push(res);
                        }
                        var totalRating = 0;
                        for (var i = 0; i <  users[reservations[reservationId].userId].ratings.length; i++) {
                            totalRating += users[reservations[reservationId].userId].ratings[i].value;
                        }
                        if (totalRating > 0) {
                            totalRating = Math.round(totalRating / users[reservations[reservationId].userId].ratings.length) / 10;
                        }
                        $('#listWaitingRating .reservation[data-id="' + reservationId + '"]').remove();
                        $('.modalUser__ratingTotal').text(totalRating);
                        $('.rating[data-id="' + id + '"] .rating__value, .reservation[data-id="' + reservationId + '"] .reservation__rating').html('<span class="icon icon__star text--yellow"></span> ' + (data.value / 10));
                        $('.rating[data-id="' + id + '"] .rating__comment').text((data.comment ? data.comment : ''));
                    }, function(res) {
                        console.log(res);
                        if (res instanceof Array) {
                            for (var i = 0; i < res.length; i++) {
                                addNotification('error', res[i].message);
                            }
                        } else {
                            var msg = res.responseJSON.error.message;
                            addNotification('error', msg);
                        }
                    });
                }
            });
        });
